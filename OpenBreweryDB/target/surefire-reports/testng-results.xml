<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="231" passed="193" failed="38" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-12-15T17:57:57 CET" name="SuiteNum1" finished-at="2019-12-15T17:58:25 CET" duration-ms="28521">
    <groups>
    </groups>
    <test started-at="2019-12-15T17:57:57 CET" name="MainTest" finished-at="2019-12-15T17:58:25 CET" duration-ms="28521">
      <class name="SortingTest">
        <test-method signature="ascendingSortStringValues(java.lang.String)[pri:1, instance:SortingTest@20140db9]" started-at="2019-12-15T17:58:16 CET" name="ascendingSortStringValues" data-provider="sortingParametersWithStringValues" finished-at="2019-12-15T17:58:17 CET" duration-ms="689" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[country]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ascendingSortStringValues -->
        <test-method signature="ascendingSortStringValues(java.lang.String)[pri:1, instance:SortingTest@20140db9]" started-at="2019-12-15T17:58:17 CET" name="ascendingSortStringValues" data-provider="sortingParametersWithStringValues" finished-at="2019-12-15T17:58:17 CET" duration-ms="694" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[state]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ascendingSortStringValues -->
        <test-method signature="ascendingSortStringValues(java.lang.String)[pri:1, instance:SortingTest@20140db9]" started-at="2019-12-15T17:58:17 CET" name="ascendingSortStringValues" data-provider="sortingParametersWithStringValues" finished-at="2019-12-15T17:58:18 CET" duration-ms="406" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[city]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ascendingSortStringValues -->
        <test-method signature="ascendingSortStringValues(java.lang.String)[pri:1, instance:SortingTest@20140db9]" started-at="2019-12-15T17:58:18 CET" name="ascendingSortStringValues" data-provider="sortingParametersWithStringValues" finished-at="2019-12-15T17:58:18 CET" duration-ms="405" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[brewery_type]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ascendingSortStringValues -->
        <test-method signature="descendingSortStringValues(java.lang.String)[pri:1, instance:SortingTest@20140db9]" started-at="2019-12-15T17:58:18 CET" name="descendingSortStringValues" data-provider="sortingParametersWithStringValues" finished-at="2019-12-15T17:58:19 CET" duration-ms="400" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[country]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- descendingSortStringValues -->
        <test-method signature="descendingSortStringValues(java.lang.String)[pri:1, instance:SortingTest@20140db9]" started-at="2019-12-15T17:58:19 CET" name="descendingSortStringValues" data-provider="sortingParametersWithStringValues" finished-at="2019-12-15T17:58:19 CET" duration-ms="820" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[state]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- descendingSortStringValues -->
        <test-method signature="descendingSortStringValues(java.lang.String)[pri:1, instance:SortingTest@20140db9]" started-at="2019-12-15T17:58:19 CET" name="descendingSortStringValues" data-provider="sortingParametersWithStringValues" finished-at="2019-12-15T17:58:20 CET" duration-ms="810" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[city]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- descendingSortStringValues -->
        <test-method signature="descendingSortStringValues(java.lang.String)[pri:1, instance:SortingTest@20140db9]" started-at="2019-12-15T17:58:20 CET" name="descendingSortStringValues" data-provider="sortingParametersWithStringValues" finished-at="2019-12-15T17:58:21 CET" duration-ms="406" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[brewery_type]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- descendingSortStringValues -->
        <test-method signature="descendingSortId()[pri:2, instance:SortingTest@20140db9]" started-at="2019-12-15T17:58:21 CET" name="descendingSortId" finished-at="2019-12-15T17:58:21 CET" duration-ms="375" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- descendingSortId -->
        <test-method signature="ascendingSortId()[pri:3, instance:SortingTest@20140db9]" started-at="2019-12-15T17:58:21 CET" name="ascendingSortId" finished-at="2019-12-15T17:58:21 CET" duration-ms="386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ascendingSortId -->
      </class> <!-- SortingTest -->
      <class name="GetAllBreweriesTest">
        <test-method signature="getAllBreweries()[pri:1, instance:GetAllBreweriesTest@6c1a5b54]" started-at="2019-12-15T17:58:04 CET" name="getAllBreweries" finished-at="2019-12-15T17:58:04 CET" duration-ms="790" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllBreweries -->
        <test-method signature="filterBreweriesByState()[pri:2, instance:GetAllBreweriesTest@6c1a5b54]" started-at="2019-12-15T17:58:04 CET" name="filterBreweriesByState" finished-at="2019-12-15T17:58:05 CET" depends-on-methods="GetAllBreweriesTest.getAllBreweries" duration-ms="790" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterBreweriesByState -->
        <test-method signature="filterBreweriesByCity()[pri:3, instance:GetAllBreweriesTest@6c1a5b54]" started-at="2019-12-15T17:58:05 CET" name="filterBreweriesByCity" finished-at="2019-12-15T17:58:06 CET" depends-on-methods="GetAllBreweriesTest.getAllBreweries" duration-ms="751" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterBreweriesByCity -->
        <test-method signature="filterBreweriesByName()[pri:3, instance:GetAllBreweriesTest@6c1a5b54]" started-at="2019-12-15T17:58:06 CET" name="filterBreweriesByName" finished-at="2019-12-15T17:58:07 CET" depends-on-methods="GetAllBreweriesTest.getAllBreweries" duration-ms="1130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterBreweriesByName -->
        <test-method signature="filterBreweriesByType()[pri:4, instance:GetAllBreweriesTest@6c1a5b54]" started-at="2019-12-15T17:58:07 CET" name="filterBreweriesByType" finished-at="2019-12-15T17:58:08 CET" depends-on-methods="GetAllBreweriesTest.getAllBreweries" duration-ms="711" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterBreweriesByType -->
      </class> <!-- GetAllBreweriesTest -->
      <class name="SearchTest">
        <test-method signature="checkStatusCodeAndSchema()[pri:1, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:57:57 CET" name="checkStatusCodeAndSchema" finished-at="2019-12-15T17:58:02 CET" duration-ms="5950" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCodeAndSchema -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=2616, name=Danny Boy Beer Works, brewery_type=brewpub, street=12702 Meeting House Rd, city=Carmel, state=Indiana, postal_code=46032-7292, country=United States, longitude=-86.1971767, latitude=39.971556, phone=3176698080, website_url=http://www.dannyboybeerworks.com, updated_at=2018-08-24T00:32:45.430Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=6395, name=Dead Eric Brewing Co. LLC, brewery_type=micro, street=433 Old House Rd, city=Ridgeland, state=South Carolina, postal_code=29936-6946, country=United States, longitude=-83.042921, latitude=34.723368, phone=8433383693, website_url=http://www.deadericbrewing.com, updated_at=2018-08-24T16:14:29.239Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=7174, name=Great American Restaurants, Sweetwater Tavern, brewery_type=brewpub, street=3066 Gate House Plz, city=Falls Church, state=Virginia, postal_code=22042-1028, country=United States, longitude=null, latitude=null, phone=7036458100, website_url=http://www.greatamericanrestaurants.com, updated_at=2018-08-11T21:40:05.479Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=7143, name=Commonwealth Brewing Co., brewery_type=micro, street=2444 Pleasure House Rd, city=Virginia Beach, state=Virginia, postal_code=23455-1348, country=United States, longitude=-76.1318655, latitude=36.9135253, phone=7573059652, website_url=http://www.commonwealthbrewco.com, updated_at=2018-08-24T16:28:15.916Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=6340, name=Wissahickon Brewing Company, brewery_type=micro, street=3705 W School House Ln, city=Philadelphia, state=Pennsylvania, postal_code=19129-1738, country=United States, longitude=-75.2004703333333, latitude=40.013655, phone=2154838833, website_url=http://www.wissahickonbrew.com, updated_at=2018-08-24T16:13:21.883Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=1419, name=Jessup Farm Barrel House, brewery_type=micro, street=1921 Jessup Dr, city=Fort Collins, state=Colorado, postal_code=80525-2551, country=United States, longitude=-105.0380013, latitude=40.5620458, phone=9705688345, website_url=http://jessupfarm.com/barrel-house/, updated_at=2018-08-24T00:23:33.661Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=687, name=House Beer, brewery_type=proprietor, street=219 Rose Ave, city=Venice, state=California, postal_code=90291-2567, country=United States, longitude=-118.477531857143, latitude=33.9963199183673, phone=3103103331, website_url=http://www.housebeer.us, updated_at=2018-08-23T23:29:37.348Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=1381, name=Grandma's House, brewery_type=micro, street=1710 S Broadway, city=Denver, state=Colorado, postal_code=80210-3102, country=United States, longitude=-104.987273714286, latitude=39.7435056734694, phone=3035786754, website_url=http://www.grandmasbeer.com, updated_at=2018-08-24T00:23:14.926Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=2657, name=Liter House, brewery_type=planning, street=, city=Indianapolis, state=Indiana, postal_code=46220, country=United States, longitude=null, latitude=null, phone=3176940580, website_url=, updated_at=2018-08-11T21:37:19.972Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=229, name=Columbus House Brewery, brewery_type=micro, street=701 W North St, city=Fayetteville, state=Arkansas, postal_code=72701-1865, country=United States, longitude=-94.1688685443672, latitude=36.0771652, phone=4799353752, website_url=, updated_at=2018-08-23T23:23:09.381Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=922, name=Poor House Brewing, brewery_type=micro, street=4494 30th St, city=San Diego, state=California, postal_code=92116-4287, country=United States, longitude=-117.130404, latitude=32.758977, phone=8587699070, website_url=http://www.poorhousebrew.com, updated_at=2018-08-24T00:01:05.583Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=1483, name=Ourayle House Brewery, brewery_type=micro, street=703 Main St, city=Ouray, state=Colorado, postal_code=81427-0630, country=United States, longitude=-107.671404818667, latitude=38.0240204079867, phone=9709031824, website_url=, updated_at=2018-08-24T00:24:06.399Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=1759, name=Stitch House Brewery, brewery_type=brewpub, street=829 North Market Street, city=Wilmington, state=Delaware, postal_code=19801, country=United States, longitude=-75.5490871634984, latitude=39.7438473029416, phone=3022504280, website_url=http://www.stitchhousebrewery.com, updated_at=2018-08-24T00:26:09.597Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=2062, name=Stilt House Brewery, brewery_type=micro, street=625 US 19 Alt, city=Palm Harbor, state=Florida, postal_code=34683, country=United States, longitude=null, latitude=null, phone=8138911693, website_url=http://www.stilthousebrewery.com, updated_at=2018-08-11T21:36:58.940Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=2356, name=Cary Ale House, brewery_type=brewpub, street=208 W Main St Lowr 1, city=Cary, state=Illinois, postal_code=60013-2786, country=United States, longitude=null, latitude=null, phone=8476397244, website_url=http://caryalehousebrewing.com, updated_at=2018-08-11T21:37:08.952Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=2751, name=Clock House Brewing, brewery_type=micro, street=600 1st St SE, city=Cedar Rapids, state=Iowa, postal_code=52401, country=United States, longitude=-91.665354, latitude=41.973813, phone=3192004099, website_url=http://www.clockhousebrewing.com, updated_at=2018-08-24T00:33:53.370Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=2917, name=Rock House Brewing, brewery_type=micro, street=119 Luigart Ct, city=Lexington, state=Kentucky, postal_code=40508-1686, country=United States, longitude=-84.4822984081633, latitude=38.0565233673469, phone=8593687064, website_url=http://www.rockhousebrewing.com, updated_at=2018-08-24T00:39:03.899Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=3157, name=Johanssons Dining House, brewery_type=brewpub, street=4 W Main St, city=Westminster, state=Maryland, postal_code=21157-4816, country=United States, longitude=-76.9959315, latitude=39.5753896, phone=4108760101, website_url=http://www.johanssonsdininghouse.com, updated_at=2018-08-24T00:40:37.453Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=3222, name=Barrel House Z, brewery_type=micro, street=95 Woodrock Rd, city=Weymouth, state=Massachusetts, postal_code=02189-2335, country=United States, longitude=null, latitude=null, phone=3392017888, website_url=http://www.barrelhousez.net, updated_at=2018-08-11T21:37:38.601Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=3351, name=Shire Breu Hous, brewery_type=brewpub, street=63 Flansburg Ave, city=Dalton, state=Massachusetts, postal_code=01226, country=United States, longitude=-73.1730985, latitude=42.4745867, phone=4138428313, website_url=http://www.shire.beer, updated_at=2018-08-24T00:41:46.010Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=3367, name=Tree House Brewery, brewery_type=regional, street=129 Sturbridge Rd, city=Charlton, state=Massachusetts, postal_code=01507-5330, country=United States, longitude=-72.0125532, latitude=42.1366948, phone=4139491891, website_url=http://www.treehousebrew.com, updated_at=2018-08-24T00:41:52.412Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=3681, name=Rupert's Brew House, brewery_type=micro, street=773 W Michigan Ave, city=Kalamazoo, state=Michigan, postal_code=49007-4518, country=United States, longitude=-85.5941773954181, latitude=42.29072325, phone=2693379911, website_url=http://www.rupertsbrewhouse.com, updated_at=2018-08-24T00:44:04.845Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=3568, name=Hunter's Ale House, brewery_type=brewpub, street=4855 E Blue Grass Rd, city=Mount Pleasant, state=Michigan, postal_code=48858-7527, country=United States, longitude=null, latitude=null, phone=9897792626, website_url=, updated_at=2018-08-11T21:37:51.000Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=3949, name=Ward House Brewery, brewery_type=micro, street=111 Elm Ave W, city=Waseca, state=Minnesota, postal_code=56093-2433, country=United States, longitude=null, latitude=null, phone=, website_url=http://www.wardhousebrewing.com, updated_at=2018-08-11T21:38:05.669Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=3853, name=Hayes Public House, brewery_type=micro, street=112 1st St S, city=Buffalo, state=Minnesota, postal_code=55313-1402, country=United States, longitude=-93.8745292239674, latitude=45.1708480605313, phone=7637466389, website_url=http://www.hayespublichouse.com, updated_at=2018-08-24T00:45:19.780Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4558, name=Taos Ale House, brewery_type=brewpub, street=401 Paseo del Pueblo Norte, city=Taos, state=New Mexico, postal_code=87571-5907, country=United States, longitude=-105.568722, latitude=36.41222, phone=5757585522, website_url=http://www.taosalehouse.com, updated_at=2018-08-24T15:37:48.379Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4039, name=McCoy's Public House, brewery_type=brewpub, street=4057 Pennsylvania Ave, city=Kansas City, state=Missouri, postal_code=64111-3021, country=United States, longitude=-94.5911729, latitude=39.1002989, phone=8169600866, website_url=http://www.mccoyspublichouse.com, updated_at=2018-08-24T00:46:36.359Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4658, name=Carey's Brew House, brewery_type=brewpub, street=58 Bridge St, city=Corning, state=New York, postal_code=14830-2239, country=United States, longitude=-77.0608970416667, latitude=42.1502577083333, phone=6073775651, website_url=http://www.careysbrewhouse.com, updated_at=2018-08-24T15:38:26.698Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4902, name=Scale House Brewery, brewery_type=brewpub, street=5930 State Route 414, city=Hector, state=New York, postal_code=14841-9662, country=United States, longitude=null, latitude=null, phone=6075462030, website_url=http://www.scalehousebrews.com, updated_at=2018-08-11T21:38:40.942Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4923, name=Southampton Publick House, brewery_type=brewpub, street=62 Jobs Ln, city=Southampton, state=New York, postal_code=11968-4807, country=United States, longitude=null, latitude=null, phone=6312832800, website_url=http://www.publick.com, updated_at=2018-08-11T21:38:41.687Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=5354, name=Biker Brew House, brewery_type=micro, street=5700 Interstate Blvd, city=Austintown, state=Ohio, postal_code=44515-1170, country=United States, longitude=null, latitude=null, phone=, website_url=http://www.bikerbrewhouse.com, updated_at=2018-08-11T21:38:55.960Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=5506, name=McArthur's Brew House, brewery_type=micro, street=2721 Front St, city=Cuyahoga Falls, state=Ohio, postal_code=44221-1904, country=United States, longitude=-81.4723705789474, latitude=41.1461834736842, phone=3308054600, website_url=http://www.mcarthursbrewhouse.com, updated_at=2018-08-24T15:44:28.115Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=5513, name=Moerlein Lager House, brewery_type=brewpub, street=115 Joe Nuxhall Way, city=Cincinnati, state=Ohio, postal_code=45202-4143, country=United States, longitude=-84.5087167704914, latitude=39.09630095, phone=5134212337, website_url=http://www.moerleinlagerhouse.com, updated_at=2018-08-24T15:44:30.805Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=5553, name=Pretentious Barrel House, brewery_type=micro, street=745 Taylor Ave, city=Columbus, state=Ohio, postal_code=43219-2526, country=United States, longitude=-82.960769, latitude=39.981855, phone=6148877687, website_url=http://www.pretentiousbarrelhouse.com, updated_at=2018-08-24T15:44:45.806Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=5598, name=Taft's Ale House, brewery_type=micro, street=1429 Race St, city=Cincinnati, state=Ohio, postal_code=45202-7009, country=United States, longitude=-84.51750995, latitude=39.111325, phone=, website_url=, updated_at=2018-08-24T15:45:03.186Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=6197, name=McKenzie Brew House, brewery_type=brewpub, street=451 Wilmington Pike - W Chester Pike, city=Glen Mills, state=Pennsylvania, postal_code=19342-1249, country=United States, longitude=null, latitude=null, phone=6103619800, website_url=http://www.mckenziebrewhouse.com, updated_at=2018-08-11T21:39:28.867Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=6246, name=Rivertowne Pour House, brewery_type=micro, street=312 Center Rd, city=Monroeville, state=Pennsylvania, postal_code=15146-1322, country=United States, longitude=-79.7638979257406, latitude=40.4474573147353, phone=4123728199, website_url=http://www.myrivertowne.com, updated_at=2018-08-24T16:11:25.204Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=6282, name=Spring House Brewery, brewery_type=micro, street=209 Hazel St, city=Lancaster, state=Pennsylvania, postal_code=17603-5629, country=United States, longitude=-76.3071090416667, latitude=40.029367375, phone=7178720925, website_url=http://www.springhousebeer.com, updated_at=2018-08-24T15:49:13.355Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=7193, name=House 6 Brewing, brewery_type=planning, street=, city=Ashburn, state=Virginia, postal_code=20147, country=United States, longitude=null, latitude=null, phone=5855205710, website_url=http://www.house6brewing.com, updated_at=2018-08-11T21:40:06.118Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=7241, name=Pleasure House Brewing, brewery_type=micro, street=3025 Shore Dr, city=Virginia Beach, state=Virginia, postal_code=23451-1247, country=United States, longitude=-76.079164, latitude=36.909938, phone=7574960916, website_url=http://www.pleasurehousebrewing.com, updated_at=2018-08-24T16:30:06.951Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=7231, name=Old House Vineyards, brewery_type=micro, street=18351 Corkys Ln, city=Culpeper, state=Virginia, postal_code=22701, country=United States, longitude=null, latitude=null, phone=5404231032, website_url=http://www.oldhousevineyards.com, updated_at=2018-08-11T21:40:07.506Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=7355, name=Beardslee Public House, brewery_type=brewpub, street=19116 Beardslee Blvd Ste 201, city=Bothell, state=Washington, postal_code=98011-0202, country=United States, longitude=-122.1914046, latitude=47.7663209, phone=, website_url=, updated_at=2018-08-24T16:32:41.631Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=7544, name=Machine House Brewery, brewery_type=micro, street=5840 Airport Way S Ste 121, city=Seattle, state=Washington, postal_code=98108-2751, country=United States, longitude=-122.3171301, latitude=47.5502618, phone=2064026025, website_url=http://MachineHousebrewery.com, updated_at=2018-08-24T16:36:33.511Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=7722, name=Valley House Brewing, brewery_type=brewpub, street=16111 Main St NE, city=Duvall, state=Washington, postal_code=98019-8490, country=United States, longitude=-121.985884591837, latitude=47.7431528571429, phone=4253186363, website_url=http://www.valleyhousebrewing.com, updated_at=2018-08-24T16:40:30.809Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=7888, name=McFleshman's Public House, brewery_type=planning, street=, city=Appleton, state=Wisconsin, postal_code=54911-5840, country=United States, longitude=null, latitude=null, phone=4056270167, website_url=http://www.mcfleshmans.com, updated_at=2018-08-11T21:40:34.272Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=7869, name=House of Brews, brewery_type=micro, street=4539 Helgesen Dr, city=Madison, state=Wisconsin, postal_code=53718-6747, country=United States, longitude=-89.305331202224, latitude=43.0662949, phone=6083477243, website_url=, updated_at=2018-08-24T16:43:39.758Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4391, name=Bucket Brigade Brewery, brewery_type=micro, street=205 N Main St, city=Cape May Court House, state=New Jersey, postal_code=08210-2121, country=United States, longitude=-74.8194635306123, latitude=39.086856, phone=6097782641, website_url=http://www.bucketbrigadebrewery.com, updated_at=2018-08-24T15:36:35.302Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4463, name=Slack Tide Brewing Company, brewery_type=micro, street=1072 Route 83 Unit 3, city=Cape May Court House, state=New Jersey, postal_code=08210-1200, country=United States, longitude=null, latitude=null, phone=6094782343, website_url=http://www.slacktidebrewingco.com, updated_at=2018-08-11T21:38:25.114Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=219, name=Wren House Brewing Company, brewery_type=micro, street=2125 N 24th St, city=Phoenix, state=Arizona, postal_code=85008-2713, country=United States, longitude=-112.0301125, latitude=33.516633, phone=6022449184, website_url=http://www.wrenhousebrewing.com, updated_at=2018-08-23T23:22:59.255Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=112, name=Button Brew House, LLC, brewery_type=micro, street=6800 N Camino Martin Ste 160, city=Tucson, state=Arizona, postal_code=85741-2395, country=United States, longitude=null, latitude=null, phone=5202688543, website_url=http://www.button.beer, updated_at=2018-08-11T21:35:46.951Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=464, name=Catalina Island Brew House, brewery_type=micro, street=417 Crescent Ave, city=Avalon, state=California, postal_code=90704, country=United States, longitude=-118.3256345, latitude=33.3434987, phone=3105906905, website_url=http://www.catalinaislandbrewhouse.com, updated_at=2018-08-23T23:26:31.335Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=294, name=Ale House Brewing Co, brewery_type=micro, street=, city=San Jose, state=California, postal_code=95118-1605, country=United States, longitude=-121.8905833, latitude=37.3361905, phone=4083907574, website_url=, updated_at=2018-08-23T23:24:07.379Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=790, name=Lost Coast Brew House, brewery_type=brewpub, street=1600 Sunset Dr, city=Eureka, state=California, postal_code=95503-2401, country=United States, longitude=null, latitude=null, phone=7074454484, website_url=http://www.lostcoast.com, updated_at=2018-08-11T21:36:12.261Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=891, name=Pacific Beach Ale House, brewery_type=brewpub, street=721 Grand Ave, city=San Diego, state=California, postal_code=92109-3905, country=United States, longitude=-117.255265, latitude=32.794255, phone=8585812337, website_url=http://www.pbalehouse.com, updated_at=2018-08-24T00:00:37.852Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=821, name=Modern Times Barrel House, brewery_type=micro, street=3486 Kurtz St # 102, city=San Diego, state=California, postal_code=92110-4429, country=United States, longitude=-117.208724993243, latitude=32.7553932482817, phone=, website_url=, updated_at=2018-08-23T23:59:37.612Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=1004, name=Shady Oak Barrel House, brewery_type=micro, street=420 1st St, city=Santa Rosa, state=California, postal_code=95401-6339, country=United States, longitude=-122.715472553127, latitude=38.4370939574769, phone=7075958958, website_url=http://shadyoakbarrelhouse.com, updated_at=2018-08-24T00:02:23.983Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=1698, name=Little House Brewing Company, brewery_type=planning, street=, city=Chester, state=Connecticut, postal_code=06412-1342, country=United States, longitude=null, latitude=null, phone=6128105315, website_url=http://www.littlehousebrewing.com, updated_at=2018-08-11T21:36:46.951Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=3104, name=Brew House No 16, brewery_type=brewpub, street=831 N Calvert St, city=Baltimore, state=Maryland, postal_code=21202-3705, country=United States, longitude=-76.6127119165296, latitude=39.29963095, phone=4106594084, website_url=http://www.brewhouseno16.com, updated_at=2018-08-24T00:40:20.888Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=2078, name=The Mack House Brewpub, brewery_type=brewpub, street=9118 W State Road 84, city=Davie, state=Florida, postal_code=33324-4416, country=United States, longitude=null, latitude=null, phone=9544745040, website_url=http://www.themackhouse.com, updated_at=2018-08-11T21:36:59.416Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=3153, name=House Cat Brewing Company, brewery_type=planning, street=, city=Frederick, state=Maryland, postal_code=21704, country=United States, longitude=null, latitude=null, phone=3016050733, website_url=, updated_at=2018-08-11T21:37:36.549Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=3161, name=Market Street Public House, brewery_type=brewpub, street=200 Market St, city=Denton, state=Maryland, postal_code=21629-1037, country=United States, longitude=-75.831804, latitude=38.886037, phone=4104794720, website_url=http://www.marketstreet.pub, updated_at=2018-08-24T00:40:38.324Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4056, name=Public House Brewing Co, brewery_type=micro, street=551 State Route B, city=Saint James, state=Missouri, postal_code=65559-1055, country=United States, longitude=null, latitude=null, phone=5732613333, website_url=http://www.publichousebrewery.com, updated_at=2018-08-11T21:38:08.953Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=3175, name=Pratt Street Ale House, brewery_type=brewpub, street=206 W Pratt St, city=Baltimore, state=Maryland, postal_code=21201-2426, country=United States, longitude=-76.6181543559366, latitude=39.28659055, phone=4102448900, website_url=http://www.oliverales.com, updated_at=2018-08-24T00:40:43.550Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4057, name=Public House Brewing Company, brewery_type=micro, street=600 N Rolla St Ste B, city=Rolla, state=Missouri, postal_code=65401-3111, country=United States, longitude=null, latitude=null, phone=5734262337, website_url=http://www.publichousebrewery.com, updated_at=2018-08-11T21:38:08.983Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4198, name=Fairfield Opera House Brewery, brewery_type=brewpub, street=415 N D St, city=Fairfield, state=Nebraska, postal_code=68938-2114, country=United States, longitude=-98.1058865714286, latitude=40.4306157142857, phone=4027262447, website_url=http://www.fairfieldoperahouse.com, updated_at=2018-08-24T00:47:37.367Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4141, name=Kettle House Brewing Co., brewery_type=regional, street=605 Coldsmoke Ave, city=Bonner, state=Montana, postal_code=59823-8504, country=United States, longitude=null, latitude=null, phone=4067281660, website_url=http://www.kettlehouse.com, updated_at=2018-08-11T21:38:12.197Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4341, name=Redhook - Cataqua Public House, brewery_type=regional, street=35 Corporate Dr, city=Portsmouth, state=New Hampshire, postal_code=03801-, country=United States, longitude=-70.8023326882494, latitude=43.0858295074873, phone=6034308600, website_url=http://www.redhook.com, updated_at=2018-08-24T15:36:15.823Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4199, name=Farnam House Brewing Company, brewery_type=brewpub, street=3558 Farnam St, city=Omaha, state=Nebraska, postal_code=68131-3304, country=United States, longitude=-95.9658017764832, latitude=41.2578153029739, phone=4024016086, website_url=http://www.farnamhousebrewing.com, updated_at=2018-08-24T00:47:37.853Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4454, name=Nale House Brewing Co, brewery_type=micro, street=32 N Main St, city=Medford, state=New Jersey, postal_code=08055-2412, country=United States, longitude=-74.8236212076653, latitude=39.900720148419, phone=6097607246, website_url=http://www.nalehousebrewing.com, updated_at=2018-08-24T15:37:01.561Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4826, name=Mill House Brewing Company, brewery_type=brewpub, street=289 Mill St, city=Poughkeepsie, state=New York, postal_code=12601-3111, country=United States, longitude=-73.926472, latitude=41.705077, phone=8452345573, website_url=http://www.millhousebrewing.com, updated_at=2018-08-24T15:39:44.682Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=5221, name=Oyster House Brewing Co., brewery_type=brewpub, street=625 Haywood Rd, city=Asheville, state=North Carolina, postal_code=28806-3255, country=United States, longitude=null, latitude=null, phone=8285759370, website_url=http://www.oysterhousebeers.com, updated_at=2018-08-11T21:38:51.414Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=5528, name=Noble Creature Cask House, brewery_type=brewpub, street=126 E Rayen Ave, city=Youngstown, state=Ohio, postal_code=44503-1619, country=United States, longitude=-80.6457616215263, latitude=41.1022792972554, phone=2347191827, website_url=http://www.noblecreaturebeer.com, updated_at=2018-08-24T15:44:36.494Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=5308, name=Wicked Weed Funk House, brewery_type=large, street=95 Old Shoals Rd, city=Arden, state=North Carolina, postal_code=28704-9401, country=United States, longitude=-82.524955526838, latitude=35.4674064, phone=, website_url=http://www.wickedweedbrewing.com, updated_at=2018-08-24T15:43:06.864Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=5758, name=Cascade Brewing Barrel House, brewery_type=micro, street=939 SE Belmont St, city=Portland, state=Oregon, postal_code=97214-2519, country=United States, longitude=-122.656005749976, latitude=45.5167536, phone=5032658603, website_url=http://www.cascadebrewing.com, updated_at=2018-08-24T15:46:08.535Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=5690, name=Vanessa House Beer Company, brewery_type=micro, street=520 N Meridian Ave, city=Oklahoma City, state=Oklahoma, postal_code=73107-5723, country=United States, longitude=-97.6011607, latitude=35.5005056, phone=4058164870, website_url=http://www.vanessahousebeerco.com, updated_at=2018-08-24T15:45:40.905Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=6198, name=McKenzie Brew House (#2), brewery_type=brewpub, street=240 Lancaster Ave, city=Malvern, state=Pennsylvania, postal_code=19355-1802, country=United States, longitude=null, latitude=null, phone=6102962222, website_url=http://www.mckenziebrewhouse.com, updated_at=2018-08-11T21:39:28.894Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=5759, name=Cascade Brewing Blending House, brewery_type=micro, street=6770 SW 111th Ave, city=Beaverton, state=Oregon, postal_code=97008-5336, country=United States, longitude=-122.7900557, latitude=45.4709556, phone=5033660730, website_url=http://www.cascadebrewing.com, updated_at=2018-08-24T15:46:08.977Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=6132, name=Grist House Craft Brewery, brewery_type=micro, street=10 Sherman St, city=Pittsburgh, state=Pennsylvania, postal_code=15209-2728, country=United States, longitude=null, latitude=null, phone=4124471442, website_url=http://www.gristhouse.com, updated_at=2018-08-11T21:39:26.907Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=6199, name=McKenzie Brew House (#3), brewery_type=brewpub, street=324 W Swedesford Rd, city=Berwyn, state=Pennsylvania, postal_code=19312-1165, country=United States, longitude=null, latitude=null, phone=6103619800, website_url=, updated_at=2018-08-11T21:39:28.920Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=6629, name=Bar D Brew House, brewery_type=brewpub, street=213 N High St, city=San Saba, state=Texas, postal_code=76877-3533, country=United States, longitude=-98.7185491738724, latitude=31.1967847171323, phone=3253726100, website_url=http://www.bardbrewhouse.com, updated_at=2018-08-24T16:18:56.825Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=6533, name=Harding House Brewing Company, brewery_type=planning, street=, city=Nashville, state=Tennessee, postal_code=37209, country=United States, longitude=null, latitude=null, phone=3034089405, website_url=http://www.hardinghousebrew.com, updated_at=2018-08-11T21:39:42.360Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=6300, name=Taylor House Brewing Co, brewery_type=micro, street=76 Lehigh St, city=Catasauqua, state=Pennsylvania, postal_code=18032, country=United States, longitude=-75.4680534197733, latitude=40.6481783182778, phone=, website_url=http://www.taylorhousebrewing.com, updated_at=2018-08-24T16:12:29.493Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=6805, name=Martin House Brewing Company, brewery_type=micro, street=220 S Sylvania Ave Ste 209, city=Fort Worth, state=Texas, postal_code=76111-2232, country=United States, longitude=null, latitude=null, phone=8172220177, website_url=http://www.martinhousebrewing.com, updated_at=2018-08-11T21:39:52.104Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=6958, name=Zero One Ale House, brewery_type=brewpub, street=20 W Beauregard Ave, city=San Angelo, state=Texas, postal_code=76903-5833, country=United States, longitude=-100.437236263931, latitude=31.4624541882408, phone=3256535123, website_url=, updated_at=2018-08-24T16:24:36.784Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=7201, name=Lake Anne Brew House, brewery_type=micro, street=11424 Washington Plz W, city=Reston, state=Virginia, postal_code=20190-4310, country=United States, longitude=-77.3411707, latitude=38.9682812, phone=5717582739, website_url=http://www.lakeannebrewhouse.com, updated_at=2018-08-24T16:29:19.183Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=7267, name=Smartmouth Brewing Pilot House, brewery_type=micro, street=313 32nd St, city=Virginia Beach, state=Virginia, postal_code=23451-2950, country=United States, longitude=-75.980788471997, latitude=36.86023395, phone=, website_url=, updated_at=2018-08-24T16:30:41.379Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=7297, name=Three Notch'd Sour House, brewery_type=micro, street=520 2nd St SE, city=Charlottesville, state=Virginia, postal_code=22902-5794, country=United States, longitude=-78.4820248, latitude=38.0261159, phone=4349563141, website_url=http://threenotchdbrewing.com/, updated_at=2018-08-24T16:31:21.980Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=7446, name=Engine House No 9, brewery_type=brewpub, street=611 N Pine St, city=Tacoma, state=Washington, postal_code=98406-6729, country=United States, longitude=-122.47352625, latitude=47.25642875, phone=2532723435, website_url=http://www.ehouse9.com, updated_at=2018-08-24T16:34:26.974Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=7542, name=Lumber House Brewing Company, brewery_type=micro, street=30741 3rd AVE Suite 133, city=Black Diamond, state=Washington, postal_code=98010, country=United States, longitude=null, latitude=null, phone=4254320121, website_url=http://www.lumberjackbrewing.com, updated_at=2018-08-11T21:40:19.605Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=961, name=Rok House Brewing Co., LLC, brewery_type=micro, street=1939 W 11th St Ste A, city=Upland, state=California, postal_code=91786-3559, country=United States, longitude=null, latitude=null, phone=9099810020, website_url=http://www.rokhousebrewing.com, updated_at=2018-08-11T21:36:18.292Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=688, name=House Of Pendragon Brewing Co, brewery_type=micro, street=1849 Industrial Way Ste 103, city=Sanger, state=California, postal_code=93657-8727, country=United States, longitude=-119.549609431485, latitude=36.6892344202513, phone=5593467786, website_url=http://www.hopbeer.com, updated_at=2018-08-23T23:29:38.230Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=7979, name=Union House Brewing LLC, brewery_type=planning, street=, city=Plum City, state=Wisconsin, postal_code=54761-0055, country=United States, longitude=null, latitude=null, phone=, website_url=, updated_at=2018-08-11T21:40:37.325Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=1054, name=Steele and Hops Public House, brewery_type=brewpub, street=1901 Mendocino Ave, city=Santa Rosa, state=California, postal_code=95401, country=United States, longitude=-122.717258, latitude=38.459216, phone=7075232201, website_url=http://www.steeleandhops.com, updated_at=2018-08-24T00:03:09.801Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=1161, name=Venice Ale House Brewing Co, brewery_type=contract, street=2 Rose Ave, city=Venice, state=California, postal_code=90291-2411, country=United States, longitude=-118.480274, latitude=33.994634, phone=3103148253, website_url=http://www.venicealehouse.com, updated_at=2018-08-24T00:04:43.884Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=1660, name=Cambridge House Brew Pub - Granby, brewery_type=brewpub, street=357 Salmon Brook St, city=Granby, state=Connecticut, postal_code=06035-0438, country=United States, longitude=-72.7925953940791, latitude=41.9663141364589, phone=8606532739, website_url=http://www.cbh.beer, updated_at=2018-08-24T00:25:30.201Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=1904, name=Dunedin Brewery & Public House, brewery_type=brewpub, street=937 Douglas Ave, city=Dunedin, state=Florida, postal_code=34698-4945, country=United States, longitude=-82.7878256086413, latitude=28.0141823132337, phone=7277360606, website_url=http://www.dunedinbrewery.com, updated_at=2018-08-24T00:27:10.240Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=2379, name=Eris Brewery And Cider House, brewery_type=brewpub, street=4240 W Irving Park Rd, city=Chicago, state=Illinois, postal_code=60641, country=United States, longitude=-87.7342346, latitude=41.95388195, phone=5623086582, website_url=, updated_at=2018-08-24T00:30:55.505Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=3301, name=John Harvards Brew House - Framingham, brewery_type=brewpub, street=1 Worcester Rd, city=Framingham, state=Massachusetts, postal_code=01701-5359, country=United States, longitude=-71.3961924451932, latitude=42.30411485, phone=5088752337, website_url=http://www.johnharvards.com, updated_at=2018-08-24T00:41:27.695Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4540, name=Palmer Brewery & Cider House, brewery_type=micro, street=2926 Girard Blvd NE, city=Albuquerque, state=New Mexico, postal_code=87107-1935, country=United States, longitude=-106.613687816327, latitude=35.1149330204082, phone=5055080508, website_url=, updated_at=2018-08-24T15:37:39.822Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4640, name=Brick House Brewery and Restaurant, brewery_type=brewpub, street=67 W Main St, city=Patchogue, state=New York, postal_code=11772-3001, country=United States, longitude=-73.0155605365854, latitude=40.765794097561, phone=6314472337, website_url=http://www.brickhousebrewery.com, updated_at=2018-08-24T15:38:17.897Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4827, name=Mill House Brewing Company - Production, brewery_type=micro, street=, city=Poughkeepsie, state=New York, postal_code=12601, country=United States, longitude=null, latitude=null, phone=8452345573, website_url=, updated_at=2018-08-11T21:38:38.085Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4903, name=Scale House Brewery & Pub, brewery_type=brewpub, street=23 Cinema Dr Ste C, city=Ithaca, state=New York, postal_code=14850-1682, country=United States, longitude=null, latitude=null, phone=6072570107, website_url=http://www.scalehousebrewpub.com, updated_at=2018-08-11T21:38:40.975Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=5181, name=Mash House Restaurant & Brewery, brewery_type=brewpub, street=4150 Sycamore Dairy Rd, city=Fayetteville, state=North Carolina, postal_code=28303-3459, country=United States, longitude=-78.956548307397, latitude=35.0746817120553, phone=9108679223, website_url=http://www.themashhouse.com, updated_at=2018-08-24T15:42:12.393Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=5210, name=Oak and Dagger Public House, brewery_type=brewpub, street=18 Seaboard Ave Ste 150, city=Raleigh, state=North Carolina, postal_code=27604-8010, country=United States, longitude=null, latitude=null, phone=9199459382, website_url=http://www.oakanddagger.beer, updated_at=2018-08-11T21:38:51.090Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=5148, name=Huske Hardware House Brewing Co, brewery_type=brewpub, street=405 Hay St, city=Fayetteville, state=North Carolina, postal_code=28301-5537, country=United States, longitude=-78.8824913061224, latitude=35.0539305102041, phone=9104265650, website_url=http://www.huskehardware.com, updated_at=2018-08-24T15:41:58.788Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=5786, name=Deschutes Brewery & Public House, brewery_type=brewpub, street=1044 NW Bond St, city=Bend, state=Oregon, postal_code=97703-2002, country=United States, longitude=-121.311384469532, latitude=44.05941415, phone=5413829242, website_url=http://www.deschutesbrewery.com, updated_at=2018-08-24T16:01:20.256Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=5352, name=Bascule Brewery And Public House, brewery_type=micro, street=1397 Colorado Ave, city=Lorain, state=Ohio, postal_code=44052-3377, country=United States, longitude=-82.15710792, latitude=41.46560548, phone=, website_url=http://www.basculebrewingcompany.com, updated_at=2018-08-24T15:43:25.540Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=5787, name=Deschutes Brewery & Public House, brewery_type=brewpub, street=210 NW 11th Ave, city=Portland, state=Oregon, postal_code=97209-2929, country=United States, longitude=-122.681880808861, latitude=45.52468, phone=5032964906, website_url=http://www.deschutesbrewery.com, updated_at=2018-08-24T16:01:21.754Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=6066, name=Center Square Brewing / Altland House, brewery_type=brewpub, street=1 Center Sq, city=Abbottstown, state=Pennsylvania, postal_code=17301-9502, country=United States, longitude=null, latitude=null, phone=7172599535, website_url=http://centersquarebrew.com, updated_at=2018-08-11T21:39:24.661Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=6717, name=Draught House Pub and Brewery, brewery_type=micro, street=4112 Medical Pkwy Ste 100, city=Austin, state=Texas, postal_code=78756-3715, country=United States, longitude=-97.7428611, latitude=30.3110713, phone=5124526258, website_url=http://www.draughthouse.com, updated_at=2018-08-24T16:20:12.663Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=7245, name=Public House Kitchen and Brewery, brewery_type=brewpub, street=9406 Battle St, city=Manassas, state=Virginia, postal_code=20110-5431, country=United States, longitude=-77.4726206, latitude=38.7513396, phone=5712921427, website_url=http://www.badwolfpublichouse.com, updated_at=2018-08-24T16:30:13.010Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=7296, name=Three Notch'd RVA Collab House, brewery_type=micro, street=2930 W Broad St, city=Richmond, state=Virginia, postal_code=23230-5114, country=United States, longitude=-77.4719488308763, latitude=37.5636996357021, phone=4342930610, website_url=http://www.threenotchdbrewing.com, updated_at=2018-08-24T16:31:20.522Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=196, name=State 48 Barrel and Lager House, brewery_type=planning, street=, city=Scottsdale, state=Arizona, postal_code=85260-1924, country=United States, longitude=-111.8992365, latitude=33.5091215, phone=, website_url=, updated_at=2018-08-23T23:22:40.070Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=1061, name=Storytellers Brewery and Meet House, LLC, brewery_type=planning, street=, city=Corona, state=California, postal_code=92880-1798, country=United States, longitude=-117.5664449, latitude=33.8752945, phone=9092475710, website_url=http://www.storytellersbrewery.com, updated_at=2018-08-24T00:03:15.776Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=7588, name=Northwood Public House & Brewery, brewery_type=brewpub, street=1401 SE Rasmussen Blvd, city=Battle Ground, state=Washington, postal_code=98604-8620, country=United States, longitude=-122.523278621773, latitude=45.77521745, phone=3607230937, website_url=http://www.northwoodpublichouse.com, updated_at=2018-08-24T16:37:32.070Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=7298, name=Three Notch'd Valley Collab House, brewery_type=micro, street=241 E Market St, city=Harrisonburg, state=Virginia, postal_code=22801, country=United States, longitude=-78.8654965, latitude=38.4487621, phone=4342930610, website_url=, updated_at=2018-08-24T16:31:23.497Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=1085, name=TAPS Fish House and Brewery - Brea, brewery_type=brewpub, street=101 E Imperial Hwy, city=Brea, state=California, postal_code=92821-4924, country=United States, longitude=-117.9018387, latitude=33.9171643, phone=7142570101, website_url=http://www.tapsbrea.com, updated_at=2018-08-24T00:03:37.619Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=2146, name=Good Word Brewing & Public House, brewery_type=brewpub, street=3085 Main St Ste 520, city=Duluth, state=Georgia, postal_code=30096-3261, country=United States, longitude=null, latitude=null, phone=4049732077, website_url=http://www.goodwordbrewing.com, updated_at=2018-08-11T21:37:01.965Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=1086, name=TAPS Fish House and Brewery - Corona, brewery_type=brewpub, street=2745 Lakeshore Dr, city=Corona, state=California, postal_code=92883-7367, country=United States, longitude=-117.508854100175, latitude=33.8140831529874, phone=9512775800, website_url=, updated_at=2018-08-24T00:03:38.525Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=2614, name=Crooked Ewe Brewery & Ale House, brewery_type=brewpub, street=1047 Lincoln Way E, city=South Bend, state=Indiana, postal_code=46601-3726, country=United States, longitude=null, latitude=null, phone=5742170881, website_url=http://www.crookedewe.com, updated_at=2018-08-11T21:37:18.713Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=2681, name=Power House Brewing Co's Columbus Bar, brewery_type=brewpub, street=2735 N State Road 9, city=Columbus, state=Indiana, postal_code=47203-9648, country=United States, longitude=null, latitude=null, phone=8123758800, website_url=http://www.powerhousebrewingco.com, updated_at=2018-08-11T21:37:20.992Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=2696, name=St. Joseph Brewery & Public House, brewery_type=brewpub, street=540 N College Ave, city=Indianapolis, state=Indiana, postal_code=46202-3504, country=United States, longitude=-86.1449174, latitude=39.8095687, phone=3176025670, website_url=http://www.saintjoseph.beer.com, updated_at=2018-08-24T00:33:23.833Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=2774, name=Granite City Food & Wort House, brewery_type=micro, street=1722 Detroit St, city=Ellsworth, state=Iowa, postal_code=50075, country=United States, longitude=-93.5747379776529, latitude=42.3133091901518, phone=5158364060, website_url=http://www.gcfb.net, updated_at=2018-08-24T00:37:56.936Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=3030, name=Liberal Cup Public House and Brewery, brewery_type=brewpub, street=115 Water St, city=Hallowell, state=Maine, postal_code=04347-1357, country=United States, longitude=-69.7901306835835, latitude=44.2868199627939, phone=2076232739, website_url=http://www.theliberalcup.com, updated_at=2018-08-24T00:39:53.029Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=3139, name=Frisco Tap House & Push Brewery, brewery_type=brewpub, street=6695 Dobbin Rd, city=Columbia, state=Maryland, postal_code=21045-4755, country=United States, longitude=-76.8252248, latitude=39.1860574, phone=4103124907, website_url=http://www.friscogrille.com, updated_at=2018-08-24T00:40:32.222Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=3429, name=Big Rock Chop House & Brewery, brewery_type=contract, street=245 S Eton St, city=Birmingham, state=Michigan, postal_code=48009-6577, country=United States, longitude=-83.1960391071924, latitude=42.5469386819908, phone=2486477774, website_url=http://www.bigrockchophouse.com, updated_at=2018-08-24T00:42:19.275Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=3677, name=Round Barn Brewery & Public House, brewery_type=micro, street=9151 First St, city=Baroda, state=Michigan, postal_code=49101-8927, country=United States, longitude=null, latitude=null, phone=2693267059, website_url=http://www.roundbarnbrewery.com, updated_at=2018-08-11T21:37:55.530Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4741, name=Genesee Brew House / North American Breweries, brewery_type=brewpub, street=25 Cataract St, city=Rochester, state=New York, postal_code=14605, country=United States, longitude=-77.6147783, latitude=43.163584, phone=5852639200, website_url=http://www.geneseebeer.com, updated_at=2018-08-24T15:39:05.399Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4306, name=Candia Road Brewing / Nepenthe Ale House, brewery_type=micro, street=840 Candia Rd, city=Manchester, state=New Hampshire, postal_code=03109-5201, country=United States, longitude=-71.4130109581101, latitude=42.9849563, phone=6039358123, website_url=http://www.candiaroad.com, updated_at=2018-08-24T15:36:00.586Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=5008, name=Angry Troll Brewing / 222 Public House, brewery_type=brewpub, street=222 E Main St Ste U2, city=Elkin, state=North Carolina, postal_code=28621-3493, country=United States, longitude=null, latitude=null, phone=3362582251, website_url=http://www.angrytrollbrewing.com, updated_at=2018-08-11T21:38:44.581Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4888, name=Route 6 Tap House/ Putnam Brewery, brewery_type=brewpub, street=728 US-6, city=Mahopac, state=New York, postal_code=10541, country=United States, longitude=-73.7264240578384, latitude=41.3775057085326, phone=8456287302, website_url=http://www.facebook.com/Putnam-Brewery-165364887155377/, updated_at=2018-08-24T15:40:08.033Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=5569, name=Rivertown Brewing Co - Monroe Barrel House, brewery_type=micro, street=6550 Hamilton Lebanon Rd, city=Monroe, state=Ohio, postal_code=45044-9285, country=United States, longitude=-84.4121541708543, latitude=39.445756120603, phone=5133607839, website_url=http://www.rivertownbrewery.com, updated_at=2018-08-24T15:44:52.452Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=5838, name=Laurelwood Public House and Brewery - NE, brewery_type=micro, street=5115 NE Sandy Blvd, city=Portland, state=Oregon, postal_code=97213-2525, country=United States, longitude=-122.61067265665, latitude=45.54014675, phone=5032820622, website_url=http://laurelwoodbrewingco.com, updated_at=2018-08-24T16:02:31.517Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=5863, name=McMenamins Hillsdale Brewery and Public House, brewery_type=micro, street=1505 SW Sunset Blvd, city=Portland, state=Oregon, postal_code=97239-2625, country=United States, longitude=-122.6936922, latitude=45.4792439, phone=5032931753, website_url=http://www.mcmenamins.com, updated_at=2018-08-24T16:03:06.453Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=6521, name=Elkmont Exchange Brewery and Eating House, brewery_type=brewpub, street=745 N Broadway St, city=Knoxville, state=Tennessee, postal_code=37917-7202, country=United States, longitude=null, latitude=null, phone=8653600602, website_url=http://elkmontexchange.com, updated_at=2018-08-11T21:39:41.902Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=6301, name=The Barley House Brewing Company LLC, brewery_type=brewpub, street=8399 Sharon Mercer Rd, city=Mercer, state=Pennsylvania, postal_code=16137, country=United States, longitude=-80.265315, latitude=41.225933, phone=7242697837, website_url=http://www.barleyhousebrewing.com, updated_at=2018-08-24T16:12:30.939Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=1124, name=Tied House Cafe and Brewery-Mtn View, brewery_type=brewpub, street=954 Villa St, city=Mountain View, state=California, postal_code=94041-1236, country=United States, longitude=-122.0806432, latitude=37.3946092, phone=6509652739, website_url=http://www.tiedhouse.com, updated_at=2018-08-24T00:04:12.471Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=6988, name=Ruby River Steak House and Brewery, brewery_type=brewpub, street=4286 Riverdale Rd, city=Ogden, state=Utah, postal_code=84405-3512, country=United States, longitude=-111.988375517321, latitude=41.1840523402125, phone=8016222320, website_url=http://www.sizzlingplatter.com, updated_at=2018-08-24T16:25:08.753Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=7531, name=Laurelwood Public House and Brewery - NE, brewery_type=proprietor, street=14300 NE 145th St, city=Woodinville, state=Washington, postal_code=98072-6950, country=United States, longitude=-122.1460064, latitude=47.7328255, phone=4254833232, website_url=, updated_at=2018-08-24T16:36:16.855Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=212, name=Two Brothers Scottsdale Tap House and Brewery, brewery_type=brewpub, street=4321 N Scottsdale Rd, city=Scottsdale, state=Arizona, postal_code=85251-3329, country=United States, longitude=-111.9254955, latitude=33.658427, phone=4803783001, website_url=, updated_at=2018-08-23T23:22:53.949Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=3148, name=Guinness Open Gate Brewery and Barrel House, brewery_type=large, street=5001 Washington Blvd, city=Halethorpe, state=Maryland, postal_code=21227-5000, country=United States, longitude=-76.6984386545525, latitude=39.222265, phone=9022663839, website_url=, updated_at=2018-08-24T00:40:35.012Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=2091, name=Uncle Ernies Bayfront Grill & Brew House, brewery_type=contract, street=1151 Bayview Ave, city=Panama City, state=Florida, postal_code=32401-1452, country=United States, longitude=-85.702765, latitude=30.1698125, phone=8507638427, website_url=http://uncleerniesbayfrontgrill.com/welcome/, updated_at=2018-08-24T00:28:46.128Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4330, name=Moat Mountain Smoke House and Brewing Co, brewery_type=brewpub, street=3378 White Mountain Highway, city=North Conway, state=New Hampshire, postal_code=03860-1518, country=United States, longitude=-71.1435853482066, latitude=44.06850015, phone=6033566381, website_url=http://www.moatmountain.com, updated_at=2018-08-24T15:36:12.050Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=3665, name=Red Jacket Brewing at Michigan House Cafe, brewery_type=brewpub, street=300 6th St, city=Calumet, state=Michigan, postal_code=49913-1508, country=United States, longitude=-88.4535254, latitude=47.2464521, phone=9063371910, website_url=http://www.michiganhousecafe.com/brewpub.html, updated_at=2018-08-24T00:43:57.316Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=5351, name=Barley's Brewing Company (Ale House No. 1), brewery_type=brewpub, street=467 N High St, city=Columbus, state=Ohio, postal_code=43215-2007, country=United States, longitude=-83.0027669, latitude=39.9719408, phone=6142282537, website_url=http://www.barleysbrewing.com, updated_at=2018-08-24T15:43:25.107Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=5126, name=Goose And The Monkey Brew House, LLC, brewery_type=planning, street=, city=Lexington, state=North Carolina, postal_code=27292, country=United States, longitude=null, latitude=null, phone=3362405310, website_url=http://www.gooseandthemonkeybrewhouse.com, updated_at=2018-08-11T21:38:48.410Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=5837, name=Laurelwood Public House & Brewery - SE Portland, brewery_type=brewpub, street=6716 SE Milwaukie Ave, city=Portland, state=Oregon, postal_code=97202-5618, country=United States, longitude=-122.64849505, latitude=45.47415655, phone=5039436157, website_url=, updated_at=2018-08-24T16:02:29.973Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=7844, name=Fountain City Brewing Co / Monarch Public House, brewery_type=contract, street=19 N Main St, city=Fountain City, state=Wisconsin, postal_code=54629-, country=United States, longitude=-91.717370392497, latitude=44.1312440098884, phone=6086874231, website_url=http://www.monarchtavern.com, updated_at=2018-08-24T16:43:04.643Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=7960, name=Stone Cellar Brewpub / Stone Arch Brew House, brewery_type=brewpub, street=1004 S Olde Oneida St Uppr, city=Appleton, state=Wisconsin, postal_code=54915-1753, country=United States, longitude=null, latitude=null, phone=9207313322, website_url=http://www.stonecellarbrewpub.com, updated_at=2018-08-11T21:40:36.687Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=7111, name=Blue Mountain Barrel House and Organic Brewery, brewery_type=micro, street=495 Cooperative Way, city=Arrington, state=Virginia, postal_code=22922-3305, country=United States, longitude=null, latitude=null, phone=4342634002, website_url=http://www.bluemountainbarrel.com, updated_at=2018-08-11T21:40:02.920Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=1159, name=Urge Gastropub & Common House/Mason Ale Works, brewery_type=brewpub, street=255 Redel Rd, city=San Marcos, state=California, postal_code=92078-4347, country=United States, longitude=-117.158627, latitude=33.135679, phone=, website_url=, updated_at=2018-08-24T00:04:42.119Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=3554, name=HawkPeak Brewing Company DBA Grand Haven Brew House, brewery_type=brewpub, street=101 Washington Ave # 2B, city=Grand Haven, state=Michigan, postal_code=49417-1302, country=United States, longitude=null, latitude=null, phone=6166072060, website_url=http://www.grandhavenbrewhouse.com, updated_at=2018-08-11T21:37:50.425Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=3066, name=Run of the Mill Public House & Brewery, brewery_type=brewpub, street=100 Main St, city=Saco, state=Maine, postal_code=04072-3500, country=United States, longitude=-70.442601, latitude=43.501374, phone=2075719648, website_url=http://www.therunofthemill.net, updated_at=2018-08-24T00:40:07.769Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=5135, name=Hickory Brewery / American Honor Ale House and Brewery, brewery_type=micro, street=883 Highland Ave SE, city=Hickory, state=North Carolina, postal_code=28602-1106, country=United States, longitude=-81.325497622729, latitude=35.7353351663058, phone=8284149600, website_url=, updated_at=2018-08-24T15:41:52.900Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=3403, name=Atwater In the Park Biergarten and Tap House, brewery_type=brewpub, street=1175 Lakepointe St, city=Grosse Pointe Park, state=Michigan, postal_code=48230-1319, country=United States, longitude=-82.9399103, latitude=42.3814617, phone=3133445104, website_url=http://www.atwaterbeer.com, updated_at=2018-08-24T00:42:07.906Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4138, name=Julius Lehrkind Brewing, brewery_type=micro, street=1717 N Rouse Ave, city=Bozeman, state=Montana, postal_code=59715-2426, country=United States, longitude=-111.031558026981, latitude=45.696333352463, phone=4065510199, website_url=http://www.juliusbrewing.com, updated_at=2018-08-24T00:47:14.851Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=7441, name=Elliott Bay Public House & Brewery - Lake City, brewery_type=brewpub, street=12537 Lake City Way NE, city=Seattle, state=Washington, postal_code=98125-4424, country=United States, longitude=-122.2948936, latitude=47.7203026, phone=2063652337, website_url=http://www.elliottbaybrewing.com, updated_at=2018-08-24T16:34:19.177Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4370, name=Atco Brewing LLC, brewery_type=micro, street=302 White Horse Pike, city=Atco, state=New Jersey, postal_code=08004-2209, country=United States, longitude=-74.8997316523657, latitude=39.77167345, phone=6097072628, website_url=http://Www.atcobrewingcompany.com, updated_at=2018-08-24T15:36:28.989Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4376, name=Berlin Brewing Company, brewery_type=micro, street=220 S White Horse Pike, city=Berlin, state=New Jersey, postal_code=08009-1902, country=United States, longitude=-74.929989727554, latitude=39.7919922798457, phone=8563362038, website_url=http://www.berlinbrewco.com, updated_at=2018-08-24T15:36:31.003Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4420, name=Garden State Beer Company, brewery_type=micro, street=247 E White Horse Pike, city=Galloway, state=New Jersey, postal_code=08205-9563, country=United States, longitude=-74.5290994779412, latitude=39.4463758970588, phone=6092322337, website_url=http://www.gardenstatebeerco.com, updated_at=2018-08-24T15:36:48.463Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=7324, name=Young Veterans Brewing Company, brewery_type=micro, street=2505 Horse Pasture Rd Ste 104, city=Virginia Beach, state=Virginia, postal_code=23453-2988, country=United States, longitude=null, latitude=null, phone=7576894021, website_url=http://www.yvbc.com, updated_at=2018-08-11T21:40:11.124Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=106, name=Black Horse Brewery, brewery_type=micro, street=1058 Burton Rd, city=Show Low, state=Arizona, postal_code=85901-3924, country=United States, longitude=null, latitude=null, phone=9285379349, website_url=http://www.blackhorsebrewery.us, updated_at=2018-08-11T21:35:46.753Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=173, name=Pedal Haus Brewery, brewery_type=brewpub, street=730 S Mill Ave. Suite 102, city=Tempe, state=Arizona, postal_code=85281-3618, country=United States, longitude=null, latitude=null, phone=4803142337, website_url=http://www.pedalhausbrewery.com, updated_at=2018-08-11T21:35:49.091Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=317, name=Angry Horse Brewing, brewery_type=micro, street=603 W Whittier Blvd, city=Montebello, state=California, postal_code=90640-5235, country=United States, longitude=-118.1003743, latitude=34.0084152, phone=3235300015, website_url=http://angryhorsebrewing.com, updated_at=2018-08-23T23:24:28.112Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=1108, name=The Stalking Horse, brewery_type=brewpub, street=10543 West Pico Blvd, city=Los Angeles, state=California, postal_code=90064, country=United States, longitude=-118.3273271, latitude=34.0478786, phone=4248327511, website_url=http://www.thestalkinghorsepub.com, updated_at=2018-08-24T00:03:57.588Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=2176, name=Phantom Horse Brewing, brewery_type=brewpub, street=56-A Fieldstone Village Dr, city=Rock Spring, state=Georgia, postal_code=30739, country=United States, longitude=null, latitude=null, phone=4233144978, website_url=http://www.phantomhorsebrewing.com, updated_at=2018-08-11T21:37:03.064Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="2" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4216, name=Lazy Horse Brewing, brewery_type=brewpub, street=211 Road 20, city=Ohiowa, state=Nebraska, postal_code=68416-3005, country=United States, longitude=null, latitude=null, phone=4023145266, website_url=http://lazyhorsebrewing.com, updated_at=2018-08-11T21:38:15.785Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=3494, name=Draught Horse Brewery, brewery_type=brewpub, street=57721 Grand River Ave, city=New Hudson, state=Michigan, postal_code=48165-8542, country=United States, longitude=-83.61459, latitude=42.5113546, phone=2486173000, website_url=http://www.draughthorsebrewery.com, updated_at=2018-08-24T00:42:45.501Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4374, name=Beach Haus Brewery, brewery_type=micro, street=801 Main St, city=Belmar, state=New Jersey, postal_code=07719-2705, country=United States, longitude=-74.0251959, latitude=40.1812131, phone=7322027782, website_url=http://Www.beachhausbeer.com, updated_at=2018-08-24T15:36:29.975Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=5730, name=Big Horse Brewpub, brewery_type=brewpub, street=115 State St, city=Hood River, state=Oregon, postal_code=97031-2315, country=United States, longitude=-121.5120956, latitude=45.7079528, phone=5413864411, website_url=http://www.bighorsebrewpub.com, updated_at=2018-08-24T15:45:58.471Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=5958, name=The Hop Haus, brewery_type=micro, street=2568 SW Orchard Ct, city=Gresham, state=Oregon, postal_code=97080-9532, country=United States, longitude=-122.449773554501, latitude=45.4787523, phone=5033108113, website_url=, updated_at=2018-08-24T16:05:19.092Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=6472, name=Lean Horse Productions, brewery_type=contract, street=600 Meier Ave, city=Spearfish, state=South Dakota, postal_code=57783-1991, country=United States, longitude=null, latitude=null, phone=6056413534, website_url=, updated_at=2018-08-11T21:39:39.282Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=7516, name=Iron Horse Brewery, brewery_type=regional, street=1621 Vantage Hwy, city=Ellensburg, state=Washington, postal_code=98926-9001, country=United States, longitude=null, latitude=null, phone=5099333134, website_url=http://www.ironhorsebrewery.com, updated_at=2018-08-11T21:40:18.234Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=244, name=Hog Haus Brewing Co, brewery_type=brewpub, street=430 W Dickson St, city=Fayetteville, state=Arkansas, postal_code=72701-5107, country=United States, longitude=-94.1652437133366, latitude=36.0666309, phone=4792833516, website_url=http://www.hoghaus.com, updated_at=2018-08-23T23:23:21.305Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=2420, name=Horse Thief Hollow Brewery, brewery_type=brewpub, street=10426 S Western Ave, city=Chicago, state=Illinois, postal_code=60643-2508, country=United States, longitude=-87.6819511632652, latitude=41.70388555, phone=7737792739, website_url=http://www.horsethiefbrewing.com, updated_at=2018-08-24T00:31:16.933Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=2642, name=Guggman Haus Brewing Co., brewery_type=planning, street=, city=Indianapolis, state=Indiana, postal_code=46202-2158, country=United States, longitude=null, latitude=null, phone=8122302554, website_url=http://www.guggmanhausbrewing.com, updated_at=2018-08-11T21:37:19.573Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=2744, name=Big Rack Brew Haus, brewery_type=micro, street=2475 Hiatt Apple Trl, city=Winterset, state=Iowa, postal_code=50273-8113, country=United States, longitude=null, latitude=null, phone=, website_url=http://www.bigrackbrewhaus.com, updated_at=2018-08-11T21:37:22.966Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=3486, name=Dark Horse Brewing Co, brewery_type=micro, street=511 S Kalamazoo Ave, city=Marshall, state=Michigan, postal_code=49068-1718, country=United States, longitude=-84.9639765227386, latitude=42.2663882442096, phone=2697819940, website_url=http://www.darkhorsebrewery.com, updated_at=2018-08-24T00:42:41.488Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4459, name=River Horse Brewing Company, brewery_type=micro, street=2 Graphics Dr, city=Ewing, state=New Jersey, postal_code=08628-1546, country=United States, longitude=-74.7965617792942, latitude=40.2765378, phone=6098830890, website_url=http://www.riverhorse.com, updated_at=2018-08-24T15:37:03.957Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4611, name=Black Forest Brew Haus, brewery_type=brewpub, street=2015 New Hwy, city=Farmingdale, state=New York, postal_code=11735-1103, country=United States, longitude=-73.4144329120839, latitude=40.7550515, phone=6313919500, website_url=http://www.blackforestbrewhaus.com, updated_at=2018-08-24T15:38:10.962Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4643, name=Brindle Haus Brewing Company, brewery_type=micro, street=377 S Union St, city=Spencerport, state=New York, postal_code=14559-1970, country=United States, longitude=-77.804122, latitude=43.185296, phone=5855076665, website_url=http://www.brindlehausbrewing.com, updated_at=2018-08-24T15:38:19.383Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=4977, name=War Horse Brewing Company, brewery_type=brewpub, street=623 Lerch Rd Ste 5, city=Geneva, state=New York, postal_code=14456-9295, country=United States, longitude=null, latitude=null, phone=3155854432, website_url=http://www.3brotherswinery.com, updated_at=2018-08-11T21:38:43.530Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=5792, name=Drinking Horse Brewing Company, brewery_type=micro, street=11517 SE Highway 212, city=Clackamas, state=Oregon, postal_code=97015-9053, country=United States, longitude=-122.378124, latitude=45.4288733, phone=5035648165, website_url=http://www.drinkinghorsebeer.com, updated_at=2018-08-24T16:01:27.718Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=7511, name=Horse Heaven Hills Brewery, brewery_type=micro, street=1118 Meade Ave, city=Prosser, state=Washington, postal_code=99350, country=United States, longitude=-119.770633147027, latitude=46.2044744653738, phone=5097816400, website_url=http://www.horseheavenhillsbrewery.com, updated_at=2018-08-24T16:35:53.081Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=6825, name=Oil Horse Brewing Company, brewery_type=micro, street=101 W Tyler St, city=Longview, state=Texas, postal_code=75601-6318, country=United States, longitude=-94.740354, latitude=32.495365, phone=9032203414, website_url=http://Www.oilhorsebrewing.com, updated_at=2018-08-24T16:22:13.153Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=7784, name=8th Street Ale Haus, brewery_type=brewpub, street=1132 N 8th St, city=Sheboygan, state=Wisconsin, postal_code=53081-3402, country=United States, longitude=-87.7130570204082, latitude=43.7567439183673, phone=9202087540, website_url=http://www.sheboyganalehaus.com, updated_at=2018-08-24T16:41:49.804Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=7867, name=Hop Haus Brewing Co, brewery_type=brewpub, street=231 S Main St, city=Verona, state=Wisconsin, postal_code=53593-1470, country=United States, longitude=-89.5335302111111, latitude=42.9880348555556, phone=6084973165, website_url=http://www.hophausbrewing.com, updated_at=2018-08-24T16:43:36.728Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=1402, name=Horse & Dragon Brewing Company, brewery_type=micro, street=124 Racquette Dr, city=Fort Collins, state=Colorado, postal_code=80524-2757, country=United States, longitude=null, latitude=null, phone=9706318038, website_url=http://www.horseanddragonbrewing.com, updated_at=2018-08-11T21:36:37.202Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=3289, name=High Horse Brewery and Bistro, brewery_type=contract, street=24 N Pleasant St, city=Amherst, state=Massachusetts, postal_code=01002-1703, country=United States, longitude=-72.5201343, latitude=42.376218, phone=4132303034, website_url=http://www.highhorsebrewing.com, updated_at=2018-08-24T00:41:22.947Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=2380, name=Evil Horse Brewing Company, LLC, brewery_type=micro, street=1338 Main St, city=Crete, state=Illinois, postal_code=60417-2131, country=United States, longitude=-87.6314319988614, latitude=41.4449900272686, phone=7083042907, website_url=http://evilhorsebrewing.com, updated_at=2018-08-24T00:30:56.017Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
        <test-method signature="checkIfResponseContainPhrase(java.lang.Object)[pri:2, instance:SearchTest@1ffaf86]" started-at="2019-12-15T17:58:03 CET" name="checkIfResponseContainPhrase" data-provider="getObjects" finished-at="2019-12-15T17:58:03 CET" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=5418, name=Elevator Brewery and Draught Haus, brewery_type=brewpub, street=161 N High St, city=Columbus, state=Ohio, postal_code=43215-2402, country=United States, longitude=-83.0017892, latitude=39.9656697, phone=6142280500, website_url=http://www.elevatorbrewing.com, updated_at=2018-08-24T15:43:48.045Z, tag_list=[]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <true>
     but: was <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <true>
     but: was <false>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at SearchTest.checkIfResponseContainPhrase(SearchTest.java:24)
at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfResponseContainPhrase -->
      </class> <!-- SearchTest -->
      <class name="PaginationTest">
        <test-method signature="setArrayLengthToMaxValue()[pri:1, instance:PaginationTest@60099951]" started-at="2019-12-15T17:58:15 CET" name="setArrayLengthToMaxValue" finished-at="2019-12-15T17:58:16 CET" duration-ms="698" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setArrayLengthToMaxValue -->
      </class> <!-- PaginationTest -->
      <class name="AutocompleteTest">
        <test-method signature="checkStatusCodeAndSchema()[pri:1, instance:AutocompleteTest@6574a52c]" started-at="2019-12-15T17:58:03 CET" name="checkStatusCodeAndSchema" finished-at="2019-12-15T17:58:03 CET" duration-ms="647" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCodeAndSchema -->
        <test-method signature="checkSize()[pri:2, instance:AutocompleteTest@6574a52c]" started-at="2019-12-15T17:58:03 CET" name="checkSize" finished-at="2019-12-15T17:58:03 CET" depends-on-methods="AutocompleteTest.checkStatusCodeAndSchema" duration-ms="61" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSize -->
        <test-method signature="checkIfNoRepetitions()[pri:3, instance:AutocompleteTest@6574a52c]" started-at="2019-12-15T17:58:03 CET" name="checkIfNoRepetitions" finished-at="2019-12-15T17:58:04 CET" depends-on-methods="AutocompleteTest.checkStatusCodeAndSchema" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfNoRepetitions -->
      </class> <!-- AutocompleteTest -->
      <class name="ItemsPerPageTest">
        <test-method signature="checkSchema()[pri:0, instance:ItemsPerPageTest@1c7696c6]" started-at="2019-12-15T17:58:08 CET" name="checkSchema" finished-at="2019-12-15T17:58:09 CET" duration-ms="865" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSchema -->
        <test-method signature="checkDefaultArrayLength()[pri:1, instance:ItemsPerPageTest@1c7696c6]" started-at="2019-12-15T17:58:09 CET" name="checkDefaultArrayLength" finished-at="2019-12-15T17:58:09 CET" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDefaultArrayLength -->
        <test-method signature="setArrayLengthToMaxValue()[pri:2, instance:ItemsPerPageTest@1c7696c6]" started-at="2019-12-15T17:58:09 CET" name="setArrayLengthToMaxValue" finished-at="2019-12-15T17:58:10 CET" duration-ms="932" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setArrayLengthToMaxValue -->
        <test-method signature="setArrayLengthToNumberHigherThanMaxValue()[pri:3, instance:ItemsPerPageTest@1c7696c6]" started-at="2019-12-15T17:58:10 CET" name="setArrayLengthToNumberHigherThanMaxValue" finished-at="2019-12-15T17:58:10 CET" duration-ms="608" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setArrayLengthToNumberHigherThanMaxValue -->
        <test-method signature="setArrayLengthToMinValue()[pri:4, instance:ItemsPerPageTest@1c7696c6]" started-at="2019-12-15T17:58:10 CET" name="setArrayLengthToMinValue" finished-at="2019-12-15T17:58:10 CET" duration-ms="309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setArrayLengthToMinValue -->
        <test-method signature="setArrayLenghtToInvalidValue(java.lang.String)[pri:5, instance:ItemsPerPageTest@1c7696c6]" started-at="2019-12-15T17:58:10 CET" name="setArrayLenghtToInvalidValue" data-provider="invalidPerPage" finished-at="2019-12-15T17:58:11 CET" duration-ms="678" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[null]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setArrayLenghtToInvalidValue -->
        <test-method signature="setArrayLenghtToInvalidValue(java.lang.String)[pri:5, instance:ItemsPerPageTest@1c7696c6]" started-at="2019-12-15T17:58:11 CET" name="setArrayLenghtToInvalidValue" data-provider="invalidPerPage" finished-at="2019-12-15T17:58:12 CET" duration-ms="718" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ABCD]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setArrayLenghtToInvalidValue -->
        <test-method signature="setArrayLenghtToInvalidValue(java.lang.String)[pri:5, instance:ItemsPerPageTest@1c7696c6]" started-at="2019-12-15T17:58:12 CET" name="setArrayLenghtToInvalidValue" data-provider="invalidPerPage" finished-at="2019-12-15T17:58:13 CET" duration-ms="739" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[aBcDeF]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setArrayLenghtToInvalidValue -->
        <test-method signature="setArrayLenghtToInvalidValue(java.lang.String)[pri:5, instance:ItemsPerPageTest@1c7696c6]" started-at="2019-12-15T17:58:13 CET" name="setArrayLenghtToInvalidValue" data-provider="invalidPerPage" finished-at="2019-12-15T17:58:13 CET" duration-ms="722" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setArrayLenghtToInvalidValue -->
        <test-method signature="setArrayLenghtToInvalidValue(java.lang.String)[pri:5, instance:ItemsPerPageTest@1c7696c6]" started-at="2019-12-15T17:58:13 CET" name="setArrayLenghtToInvalidValue" data-provider="invalidPerPage" finished-at="2019-12-15T17:58:14 CET" duration-ms="422" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setArrayLenghtToInvalidValue -->
        <test-method signature="setArrayLenghtToInvalidValue(java.lang.String)[pri:5, instance:ItemsPerPageTest@1c7696c6]" started-at="2019-12-15T17:58:14 CET" name="setArrayLenghtToInvalidValue" data-provider="invalidPerPage" finished-at="2019-12-15T17:58:15 CET" duration-ms="812" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[?40*]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setArrayLenghtToInvalidValue -->
        <test-method signature="setArrayLenghtToInvalidValue(java.lang.String)[pri:5, instance:ItemsPerPageTest@1c7696c6]" started-at="2019-12-15T17:58:15 CET" name="setArrayLenghtToInvalidValue" data-provider="invalidPerPage" finished-at="2019-12-15T17:58:15 CET" duration-ms="728" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[k5;P^]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setArrayLenghtToInvalidValue -->
      </class> <!-- ItemsPerPageTest -->
      <class name="SpecificBreweryTest">
        <test-method is-config="true" signature="getIdRange()[pri:0, instance:SpecificBreweryTest@1e6a3214]" started-at="2019-12-15T17:58:21 CET" name="getIdRange" finished-at="2019-12-15T17:58:22 CET" duration-ms="855" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getIdRange -->
        <test-method signature="breweryWithMinId()[pri:1, instance:SpecificBreweryTest@1e6a3214]" started-at="2019-12-15T17:58:22 CET" name="breweryWithMinId" finished-at="2019-12-15T17:58:23 CET" duration-ms="314" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- breweryWithMinId -->
        <test-method signature="breweryWithMaxId()[pri:2, instance:SpecificBreweryTest@1e6a3214]" started-at="2019-12-15T17:58:23 CET" name="breweryWithMaxId" finished-at="2019-12-15T17:58:23 CET" duration-ms="325" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- breweryWithMaxId -->
        <test-method signature="breweryWithInvalidId(java.lang.String)[pri:3, instance:SpecificBreweryTest@1e6a3214]" started-at="2019-12-15T17:58:23 CET" name="breweryWithInvalidId" data-provider="invalidIds" finished-at="2019-12-15T17:58:23 CET" duration-ms="297" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8030]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- breweryWithInvalidId -->
        <test-method signature="breweryWithInvalidId(java.lang.String)[pri:3, instance:SpecificBreweryTest@1e6a3214]" started-at="2019-12-15T17:58:23 CET" name="breweryWithInvalidId" data-provider="invalidIds" finished-at="2019-12-15T17:58:24 CET" duration-ms="627" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- breweryWithInvalidId -->
        <test-method signature="breweryWithInvalidId(java.lang.String)[pri:3, instance:SpecificBreweryTest@1e6a3214]" started-at="2019-12-15T17:58:24 CET" name="breweryWithInvalidId" data-provider="invalidIds" finished-at="2019-12-15T17:58:24 CET" duration-ms="299" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- breweryWithInvalidId -->
        <test-method signature="breweryWithInvalidId(java.lang.String)[pri:3, instance:SpecificBreweryTest@1e6a3214]" started-at="2019-12-15T17:58:24 CET" name="breweryWithInvalidId" data-provider="invalidIds" finished-at="2019-12-15T17:58:24 CET" duration-ms="306" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- breweryWithInvalidId -->
        <test-method signature="breweryWithInvalidId(java.lang.String)[pri:3, instance:SpecificBreweryTest@1e6a3214]" started-at="2019-12-15T17:58:24 CET" name="breweryWithInvalidId" data-provider="invalidIds" finished-at="2019-12-15T17:58:25 CET" duration-ms="380" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2147483648]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- breweryWithInvalidId -->
        <test-method signature="breweryWithInvalidId(java.lang.String)[pri:3, instance:SpecificBreweryTest@1e6a3214]" started-at="2019-12-15T17:58:25 CET" name="breweryWithInvalidId" data-provider="invalidIds" finished-at="2019-12-15T17:58:25 CET" duration-ms="287" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-9223372036854775808]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- breweryWithInvalidId -->
      </class> <!-- SpecificBreweryTest -->
    </test> <!-- MainTest -->
  </suite> <!-- SuiteNum1 -->
</testng-results>
